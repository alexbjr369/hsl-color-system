@use "sass:math";

// @mixin generate-color-main($name: null, $set: null, $hue: null, $saturation: null, $variations: $color-main-variations) {
//   @for $index from 1 through $variations {
//     $variation: $index * 100;
//     $luminosity: map-get($color-main-luminosity, $index);

//     --#{$namespace}-color-#{$name}-#{$set}-#{$variation}: hsl(#{$hue}, #{$saturation}, #{$luminosity});
//   }
// }

/**
 * default luminosity: 10%
 * luminosity = default luminosity + luminosity diff
 */
@mixin generate-color-main($hue-map: null, $saturation-map: null, $luminosity-map: null, $variations-map: null, $luminosity-diff: null) {
  @each $key, $value in $hue-map {
    $name: $key;

    @each $key-2, $value-2 in $value {
      $set: $key-2;
      $hue: $value-2;
      $saturation: map-get(map-get($saturation-map, $key), $key-2);
      $luminosity: map-get(map-get($luminosity-map, $key), $key-2);
      $variation: map-get(map-get($variations-map, $key), $key-2);

      @each $key-3 in $variation {
        $variation-index: $key-3 * 100;
        $luminosity-index: $key-3 * ($luminosity) + if($luminosity-diff != null, $luminosity-diff, 0);

        --#{$namespace}-color-#{$name}-#{$set}-#{$variation-index}: hsl(#{$hue}, #{$saturation}, #{$luminosity-index});
      }
    }
  }
}

@mixin generate-color-neutral($hue-map: null, $saturation-map: null, $luminosity-map: null, $variations-map: null, $luminosity-multiplier: null) {
  @each $key, $value in $hue-map {
    $set: $key;
    $hue: $value;
    $saturation: map-get($saturation-map, $key);
    $luminosity: map-get($luminosity-map, $key);
    $variation: map-get($variations-map, $key);
    $luminosity-test: 0;

    @each $key-3 in $variation {
      $variation-index: $key-3 * 100;
      $luminosity-index: if($luminosity-multiplier != null, $luminosity + ($luminosity-test * ($key-3 - 1)), $key-3 * $luminosity);
      $luminosity-test: $luminosity-multiplier;

      --#{$namespace}-color-neutral-#{$set}-#{$variation-index}: hsl(#{$hue}, #{$saturation}, #{$luminosity-index});
    }
  }
}
