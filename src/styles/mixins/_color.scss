//
// color system
//
@mixin generate-color-main($hue-map: null, $saturation-map: null, $luminosity-map: null) {
  @each $key, $value in $hue-map {
    $name: $key;

    @each $key-2, $value-2 in $value {
      $set: $key-2;
      $hue: $value-2;
      $saturation: map-get(map-get($saturation-map, $name), $set);
      $luminosity-variation: map-get(map-get($luminosity-map, $name), $set);

      @each $key-3, $value-3 in $luminosity-variation {
        $luminosity: $value-3;
        $variation: $key-3;

        --#{$namespace}-color-#{$name}-#{$set}-#{$variation}: hsl(var(--#{$namespace}-color-#{$name}-#{$set}-hue), var(--#{$namespace}-color-#{$name}-#{$set}-saturation), var(--#{$namespace}-color-#{$name}-#{$set}-#{$variation}-luminosity));
      }
    }
  }
}

@mixin generate-color-neutral($hue-map: null, $saturation-map: null, $luminosity-map: null) {
  @each $key, $value in $hue-map {
    $set: $key;
    $hue: $value;
    $saturation: map-get($saturation-map, $set);
    $luminosity-variation: map-get($luminosity-map, $set);

    @each $key-2, $value-2 in $luminosity-variation {
      $luminosity: $value-2;
      $variation: $key-2;

      --#{$namespace}-color-neutral-#{$set}-#{$variation}: hsl(var(--#{$namespace}-color-neutral-#{$set}-hue), var(--#{$namespace}-color-neutral-#{$set}-saturation), var(--#{$namespace}-color-neutral-#{$set}-#{$variation}-luminosity));
    }
  }
}

@mixin generate-color-feedback($hue-map: null, $saturation-map: null, $luminosity-map: null) {
  @each $key, $value in $hue-map {
    $name: $key;

    @each $key-2, $value-2 in $value {
      $set: $key-2;
      $hue: $value-2;
      $saturation: map-get(map-get($saturation-map, $name), $set);
      $luminosity-variation: map-get(map-get($luminosity-map, $name), $set);

      @each $key-3, $value-3 in $luminosity-variation {
        $luminosity: $value-3;
        $variation: $key-3;

        --#{$namespace}-color-#{$name}-#{$set}-#{$variation}: hsl(var(--#{$namespace}-color-#{$name}-#{$set}-hue), var(--#{$namespace}-color-#{$name}-#{$set}-saturation), var(--#{$namespace}-color-#{$name}-#{$set}-#{$variation}-luminosity));
      }
    }
  }
}

//
// css custom properties
//
@mixin generate-dark-scheme-main-custom-properties($hue-map: null, $saturation-map: null, $luminosity-map: null) {
  @each $key, $value in $hue-map {
    $name: $key;

    @each $key-2, $value-2 in $value {
      $set: $key-2;
      $hue: $value-2;
      $saturation: map-get(map-get($saturation-map, $name), $set);
      $luminosity-variation: map-get(map-get($luminosity-map, $name), $set);

      --#{$namespace}-color-#{$name}-#{$set}-hue: #{$hue};
      --#{$namespace}-color-#{$name}-#{$set}-saturation: #{$saturation};

      @each $key-3, $value-3 in $luminosity-variation {
        $luminosity: $value-3;
        $variation: $key-3;

        --#{$namespace}-color-#{$name}-#{$set}-#{$variation}-luminosity: #{$luminosity};
      }
    }
  }
}

@mixin generate-dark-scheme-neutral-custom-properties($hue-map: null, $saturation-map: null, $luminosity-map: null) {
  @each $key, $value in $hue-map {
    $set: $key;
    $hue: $value;
    $saturation: map-get($saturation-map, $set);
    $luminosity-variation: map-get($luminosity-map, $set);

    --#{$namespace}-color-neutral-#{$set}-hue: #{$hue};
    --#{$namespace}-color-neutral-#{$set}-saturation: #{$saturation};

    @each $key-2, $value-2 in $luminosity-variation {
      $luminosity: $value-2;
      $variation: $key-2;

      --#{$namespace}-color-neutral-#{$set}-#{$variation}-luminosity: #{$luminosity};
    }
  }
}

@mixin generate-dark-scheme-feedback-custom-properties($hue-map: null, $saturation-map: null, $luminosity-map: null) {
  @each $key, $value in $hue-map {
    $name: $key;

    @each $key-2, $value-2 in $value {
      $set: $key-2;
      $hue: $value-2;
      $saturation: map-get(map-get($saturation-map, $name), $set);
      $luminosity-variation: map-get(map-get($luminosity-map, $name), $set);

      --#{$namespace}-color-#{$name}-#{$set}-hue: #{$hue};
      --#{$namespace}-color-#{$name}-#{$set}-saturation: #{$saturation};

      @each $key-3, $value-3 in $luminosity-variation {
        $luminosity: $value-3;
        $variation: $key-3;

        --#{$namespace}-color-#{$name}-#{$set}-#{$variation}-luminosity: #{$luminosity};
      }
    }
  }
}

//
// css classes
//
@mixin generate-color-main-classes($hue-map: null, $saturation-map: null, $luminosity-map: null, $contrast-map: null) {
  @each $key, $value in $hue-map {
    $name: $key;

    @each $key-2, $value-2 in $value {
      $set: $key-2;
      $hue: $value-2;
      $saturation: map-get(map-get($saturation-map, $name), $set);
      $luminosity-variation: map-get(map-get($luminosity-map, $name), $set);

      @each $key-3, $value-3 in $luminosity-variation {
        $luminosity: $value-3;
        $variation: $key-3;
        $contrast: map-get(map-get(map-get($contrast-map, $name), $set), $variation);

        .#{$namespace}-color_#{$name}-#{$set}-#{$variation} {
          --#{$namespace}-color: var(--#{$namespace}-color-#{$name}-#{$set}-#{$variation}) !important;
          --#{$namespace}-color-contrast: #{$contrast} !important;
        }
      }
    }
  }
}

@mixin generate-color-neutral-classes($hue-map: null, $saturation-map: null, $luminosity-map: null, $contrast-map: null) {
  @each $key, $value in $hue-map {
    $set: $key;
    $hue: $value;
    $saturation: map-get($saturation-map, $set);
    $luminosity-variation: map-get($luminosity-map, $set);

    @each $key-2, $value-2 in $luminosity-variation {
      $luminosity: $value-2;
      $variation: $key-2;
      $contrast: map-get(map-get($contrast-map, $set), $variation);

      .#{$namespace}-color_neutral-#{$set}-#{$variation} {
        --#{$namespace}-color: var(--#{$namespace}-color-neutral-#{$set}-#{$variation}) !important;
        --#{$namespace}-color-contrast: #{$contrast} !important;
      }
    }
  }
}

@mixin generate-color-feedback-classes($hue-map: null, $saturation-map: null, $luminosity-map: null, $contrast-map: null) {
  @each $key, $value in $hue-map {
    $name: $key;

    @each $key-2, $value-2 in $value {
      $set: $key-2;
      $hue: $value-2;
      $saturation: map-get(map-get($saturation-map, $name), $set);
      $luminosity-variation: map-get(map-get($luminosity-map, $name), $set);

      @each $key-3, $value-3 in $luminosity-variation {
        $luminosity: $value-3;
        $variation: $key-3;
        $contrast: map-get(map-get(map-get($contrast-map, $name), $set), $variation);

        .#{$namespace}-color_#{$name}-#{$set}-#{$variation} {
          --#{$namespace}-color: var(--#{$namespace}-color-#{$name}-#{$set}-#{$variation}) !important;
          --#{$namespace}-color-contrast: #{$contrast} !important;
        }
      }
    }
  }
}
